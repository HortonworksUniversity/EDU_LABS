
-- FOR RECORDED RESULTS, START A NEW INSTANCE OF BEELINE AND
--  TAKE THE AVERAGE OF THE FIRST THREE EXECUTIONS OF EACH QUERY



--Query 1

 SELECT LNAME, STATE, COUNT(CUST_ID) AS COUNT 
  FROM CUSTOMER
 WHERE LNAME LIKE 'M%'   
 GROUP BY STATE, LNAME 
 ORDER BY LNAME, COUNT DESC, STATE;
 
 
--Query 2

SELECT COUNT(*) 
  FROM PURCHASE;


--Query 3

SELECT COUNT(DISTINCT(SKU_NBR)) 
  FROM PURCHASE;


--Query 4

SELECT CATEGORY, COUNT(CUST_ID) 
  FROM PURCHASE 
 GROUP BY CATEGORY;


--Query 5

------ BEFORE PARTITIONING

SELECT COUNT(*)
  FROM PURCHASE
 WHERE PURCHASE.PURCH_TS >= unix_timestamp('2018-07-03', 'yyyy-MM-dd')
   AND PURCHASE.PURCH_TS <  unix_timestamp('2018-07-06', 'yyyy-MM-dd')
   AND PURCHASE.CATEGORY = "COMPUTERS";

------ AFTER PARTITIONING

SELECT COUNT(*)
  FROM PURCHASE
 WHERE PURCHASE.DATE_PARTITION >= "20180703"
   AND PURCHASE.DATE_PARTITION <= "20180705"
   AND PURCHASE.CATEGORY = "COMPUTERS";


-- Query 6

------ BEFORE PARTITIONING

SELECT PURCHASE.CATEGORY,
       AVG(PURCHASE.PRICE)               AS AVG_ITEM_PRICE, 
       COUNT(DISTINCT(PURCHASE.CUST_ID)) AS NBR_OF_CUSTS,
       COUNT(DISTINCT(CUSTOMER.STATE))   AS NBR_OF_STATES 
  FROM PURCHASE
 INNER JOIN CUSTOMER ON PURCHASE.CUST_ID = CUSTOMER.CUST_ID
 WHERE PURCHASE.PURCH_TS >= unix_timestamp('2018-07-03', 'yyyy-MM-dd')
   AND PURCHASE.PURCH_TS <  unix_timestamp('2018-07-06', 'yyyy-MM-dd')
   AND PURCHASE.CATEGORY IN ("COMPUTERS", "ELECTRONICS")
 GROUP BY PURCHASE.CATEGORY;

------ AFTER PARTITIONING

SELECT PURCHASE.CATEGORY,
       AVG(PURCHASE.PRICE)               AS AVG_ITEM_PRICE, 
       COUNT(DISTINCT(PURCHASE.CUST_ID)) AS NBR_OF_CUSTS,
       COUNT(DISTINCT(CUSTOMER.STATE))   AS NBR_OF_STATES 
  FROM PURCHASE
 INNER JOIN CUSTOMER ON PURCHASE.CUST_ID = CUSTOMER.CUST_ID
 WHERE PURCHASE.DATE_PARTITION >= "20180703"
   AND PURCHASE.DATE_PARTITION <= "20180705"
   AND PURCHASE.CATEGORY IN ("COMPUTERS", "ELECTRONICS")
 GROUP BY PURCHASE.CATEGORY;
